<%= render "layouts/header" %>

<div id="test-table-container">

  <%= form_for @test_result, :html => {:id => "test-result-form"} do |f| %>

    <table id="test-table">

      <thead>

        <%# iterate over the protocol object's attributes and produce the first row 
        of the header %>
        <tr>  
          <th rowspan="2"><%= @protocol.name %></th>
          <% @protocol.attributes.each_with_index do |(attribute, value), index| %>
            <% if value == nil or attribute == "compound" %>
              <% break %>
            <% end %>
            <th><%= "Test Point #{index + 1}" %></th>
          <% end %>
        </tr>

        <%# iterate over the protocol object's attributes and produce the second row 
        of the header that has the GPMs %>
        <tr>
          <% @protocol.attributes.each_with_index do |(attribute, value), index| %>
            <% if value == nil or attribute == "compound" %>
              <% break %>
            <% end %>
            <th><%= value %></th>
          <% end %>
        </tr>

      </thead>

      <tbody>

        <%# iterate over the protocol object's attributes and specify whether its a
        main line or secondary line %>
        <tr>
          <th></th>
          <% @protocol.attributes.each_with_index do |(attribute, value), index| %>
            <% if value == nil or attribute == "compound" %>
              <% break %>
             <% end %>
            <th>Main</th>
          <% end %>
        </tr>

        <%# for collecting the meter start read %>
        <tr id="start-read">
          <td>Start Read</td>
          <% @protocol.attributes.each_with_index do |(attribute, value), index| %>
            <% if value == nil or attribute == "compound" %>
              <% break %>
             <% end %>
            <td><%= f.number_field "tp#{index + 1}_start_read".to_sym, step: "any" %></td>
          <% end %>
        </tr>

        <%# for collecting the meter ending read %>
        <tr id="end-read">
          <td>End Read</td>
          <% @protocol.attributes.each_with_index do |(attribute, value), index| %>
            <% if value == nil or attribute == "compound" %>
              <% break %>
             <% end %>
            <td><%= number_field "tp#{index + 1}_end_read".to_sym, step: "any" %></td>
          <% end %>
        </tr>

        <%# total volume %>
        <tr id="volume">
          <td>Volume</td>
          <% @protocol.attributes.each_with_index do |(attribute, value), index| %>
            <% if value == nil or attribute == "compound" %>
              <% break %>
             <% end %>
            <td class="register-volume">
              <%= f.number_field "tp#{index + 1}_register_volume".to_sym, :class => "no-entry", :disabled => true  %>
            </td>
            <% end %>
        </tr>

        <%# for collecting reference meter start read %>
        <tr id="ref-start-read">
          <td>Reference Start Read</td>
          <% @protocol.attributes.each_with_index do |(attribute, value), index| %>
            <% if value == nil or attribute == "compound" %>
              <% break %>
             <% end %>
            <td><%= number_field_tag "ref_start_read_#{index + 1}", nil, step: "any" %></td>
          <% end %>
        </tr>

        <%# for collecting reference meter end read %>
        <tr id="ref-end-read">
          <td>Reference End Read</td>
          <% @protocol.attributes.each_with_index do |(attribute, value), index| %>
            <% if value == nil or attribute == "compound" %>
              <% break %>
             <% end %>
            <td><%= number_field_tag "ref_end_read#{index + 1}", nil, step: "any" %></td>
          <% end %>
        </tr>

        <%# for collecting reference volume %>
        <tr id="ref-volume">
          <td>Reference Volume</td>
          <% @protocol.attributes.each_with_index do |(attribute, value), index| %>
            <% if value == nil or attribute == "compound" %>
              <% break %>
             <% end %>
            <td class="reference-volume">
              <%= f.number_field "tp#{index + 1}_reference_volume".to_sym, :class => "no-entry", :disabled => true  %>
            </td>
          <% end %>

        <%# for calculating the accuracy of each test point%>
        <tr id="accuracy">
          <td>Accuracy</td>
          <% @protocol.attributes.each_with_index do |(attribute, value), index| %>
            <% if value == nil or attribute == "compound" %>
              <% break %>
             <% end %>
            <td class="accuracy">
              <%= f.number_field "tp#{index + 1}_accuracy".to_sym, :class => "no-entry", :disabled => true  %>
            </td>
          <% end %>
        </tr>

      </tbody>
    </table>
    <%= f.submit "Submit" %>
  <% end %>
</div>
